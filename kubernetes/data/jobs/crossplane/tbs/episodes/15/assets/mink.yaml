# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Namespace
metadata:
  name: mink-system
  labels:
    knative.dev/release: devel
    knative-eventing-injection: disabled
    bindings.knative.dev/exclude: "true"

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: ingressroutes.contour.heptio.com
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.virtualhost.fqdn
    description: Fully qualified domain name
    name: FQDN
    type: string
  - JSONPath: .spec.virtualhost.tls.secretName
    description: Secret with TLS credentials
    name: TLS Secret
    type: string
  - JSONPath: .spec.routes[0].match
    description: First routes defined
    name: First route
    type: string
  - JSONPath: .status.currentStatus
    description: The current status of the HTTPProxy
    name: Status
    type: string
  - JSONPath: .status.description
    description: Description of the current status
    name: Status Description
    type: string
  group: contour.heptio.com
  names:
    kind: IngressRoute
    listKind: IngressRouteList
    plural: ingressroutes
    singular: ingressroute
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: IngressRoute is an Ingress CRD specificiation
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: IngressRouteSpec defines the spec of the CRD
          properties:
            routes:
              description: Routes are the ingress routes. If TCPProxy is present,
                Routes is ignored.
              items:
                description: Route contains the set of routes for a virtual host
                properties:
                  delegate:
                    description: Delegate specifies that this route should be delegated
                      to another IngressRoute
                    properties:
                      name:
                        description: Name of the IngressRoute
                        type: string
                      namespace:
                        description: Namespace of the IngressRoute. Defaults to the
                          current namespace if not supplied.
                        type: string
                    required:
                    - name
                    type: object
                  enableWebsockets:
                    description: Enables websocket support for the route
                    type: boolean
                  match:
                    description: Match defines the prefix match
                    type: string
                  permitInsecure:
                    description: Allow this path to respond to insecure requests over
                      HTTP which are normally not permitted when a `virtualhost.tls`
                      block is present.
                    type: boolean
                  prefixRewrite:
                    description: Indicates that during forwarding, the matched prefix
                      (or path) should be swapped with this value
                    type: string
                  retryPolicy:
                    description: The retry policy for this route
                    properties:
                      count:
                        description: NumRetries is maximum allowed number of retries.
                          If not supplied, the number of retries is one.
                        format: int64
                        minimum: 0
                        type: integer
                      perTryTimeout:
                        description: PerTryTimeout specifies the timeout per retry
                          attempt. Ignored if NumRetries is not supplied.
                        type: string
                    type: object
                  services:
                    description: Services are the services to proxy traffic
                    items:
                      description: Service defines an upstream to proxy traffic to
                      properties:
                        healthCheck:
                          description: HealthCheck defines optional healthchecks on
                            the upstream service
                          properties:
                            healthyThresholdCount:
                              description: The number of healthy health checks required
                                before a host is marked healthy
                              format: int64
                              minimum: 0
                              type: integer
                            host:
                              description: The value of the host header in the HTTP
                                health check request. If left empty (default value),
                                the name "contour-envoy-healthcheck" will be used.
                              type: string
                            intervalSeconds:
                              description: The interval (seconds) between health checks
                              format: int64
                              type: integer
                            path:
                              description: HTTP endpoint used to perform health checks
                                on upstream service
                              type: string
                            timeoutSeconds:
                              description: The time to wait (seconds) for a health
                                check response
                              format: int64
                              type: integer
                            unhealthyThresholdCount:
                              description: The number of unhealthy health checks required
                                before a host is marked unhealthy
                              format: int64
                              minimum: 0
                              type: integer
                          required:
                          - path
                          type: object
                        name:
                          description: Name is the name of Kubernetes service to proxy
                            traffic. Names defined here will be used to look up corresponding
                            endpoints which contain the ips to route.
                          type: string
                        port:
                          description: Port (defined as Integer) to proxy traffic
                            to since a service can have multiple defined
                          type: integer
                        strategy:
                          description: LB Algorithm to apply (see https://github.com/projectcontour/contour/blob/master/design/ingressroute-design.md#load-balancing)
                          type: string
                        validation:
                          description: UpstreamValidation defines how to verify the
                            backend service's certificate
                          properties:
                            caSecret:
                              description: Name of the Kubernetes secret be used to
                                validate the certificate presented by the backend
                              type: string
                            subjectName:
                              description: Key which is expected to be present in
                                the 'subjectAltName' of the presented certificate
                              type: string
                          required:
                          - caSecret
                          - subjectName
                          type: object
                        weight:
                          description: Weight defines percentage of traffic to balance
                            traffic
                          format: int64
                          minimum: 0
                          type: integer
                      required:
                      - name
                      - port
                      type: object
                    type: array
                  timeoutPolicy:
                    description: The timeout policy for this route
                    properties:
                      request:
                        description: Timeout for receiving a response from the server
                          after processing a request from client. If not supplied
                          the timeout duration is undefined.
                        type: string
                    type: object
                required:
                - match
                type: object
              type: array
            tcpproxy:
              description: TCPProxy holds TCP proxy information.
              properties:
                delegate:
                  description: Delegate specifies that this tcpproxy should be delegated
                    to another IngressRoute
                  properties:
                    name:
                      description: Name of the IngressRoute
                      type: string
                    namespace:
                      description: Namespace of the IngressRoute. Defaults to the
                        current namespace if not supplied.
                      type: string
                  required:
                  - name
                  type: object
                services:
                  description: Services are the services to proxy traffic
                  items:
                    description: Service defines an upstream to proxy traffic to
                    properties:
                      healthCheck:
                        description: HealthCheck defines optional healthchecks on
                          the upstream service
                        properties:
                          healthyThresholdCount:
                            description: The number of healthy health checks required
                              before a host is marked healthy
                            format: int64
                            minimum: 0
                            type: integer
                          host:
                            description: The value of the host header in the HTTP
                              health check request. If left empty (default value),
                              the name "contour-envoy-healthcheck" will be used.
                            type: string
                          intervalSeconds:
                            description: The interval (seconds) between health checks
                            format: int64
                            type: integer
                          path:
                            description: HTTP endpoint used to perform health checks
                              on upstream service
                            type: string
                          timeoutSeconds:
                            description: The time to wait (seconds) for a health check
                              response
                            format: int64
                            type: integer
                          unhealthyThresholdCount:
                            description: The number of unhealthy health checks required
                              before a host is marked unhealthy
                            format: int64
                            minimum: 0
                            type: integer
                        required:
                        - path
                        type: object
                      name:
                        description: Name is the name of Kubernetes service to proxy
                          traffic. Names defined here will be used to look up corresponding
                          endpoints which contain the ips to route.
                        type: string
                      port:
                        description: Port (defined as Integer) to proxy traffic to
                          since a service can have multiple defined
                        type: integer
                      strategy:
                        description: LB Algorithm to apply (see https://github.com/projectcontour/contour/blob/master/design/ingressroute-design.md#load-balancing)
                        type: string
                      validation:
                        description: UpstreamValidation defines how to verify the
                          backend service's certificate
                        properties:
                          caSecret:
                            description: Name of the Kubernetes secret be used to
                              validate the certificate presented by the backend
                            type: string
                          subjectName:
                            description: Key which is expected to be present in the
                              'subjectAltName' of the presented certificate
                            type: string
                        required:
                        - caSecret
                        - subjectName
                        type: object
                      weight:
                        description: Weight defines percentage of traffic to balance
                          traffic
                        format: int64
                        minimum: 0
                        type: integer
                    required:
                    - name
                    - port
                    type: object
                  type: array
              type: object
            virtualhost:
              description: Virtualhost appears at most once. If it is present, the
                object is considered to be a "root".
              properties:
                fqdn:
                  description: The fully qualified domain name of the root of the
                    ingress tree all leaves of the DAG rooted at this object relate
                    to the fqdn
                  type: string
                tls:
                  description: If present describes tls properties. The SNI names
                    that will be matched on are described in fqdn, the tls.secretName
                    secret must contain a matching certificate
                  properties:
                    minimumProtocolVersion:
                      description: Minimum TLS version this vhost should negotiate
                      type: string
                    passthrough:
                      description: If Passthrough is set to true, the SecretName will
                        be ignored and the encrypted handshake will be passed through
                        to the backing cluster.
                      type: boolean
                    secretName:
                      description: required, the name of a secret in the current namespace
                      type: string
                  type: object
              required:
              - fqdn
              type: object
          type: object
        status:
          description: Status reports the current state of the HTTPProxy.
          properties:
            currentStatus:
              type: string
            description:
              type: string
          type: object
      required:
      - metadata
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: tlscertificatedelegations.contour.heptio.com
spec:
  group: contour.heptio.com
  names:
    kind: TLSCertificateDelegation
    listKind: TLSCertificateDelegationList
    plural: tlscertificatedelegations
    singular: tlscertificatedelegation
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: TLSCertificateDelegation is an TLS Certificate Delegation CRD specificiation.
        See design/tls-certificate-delegation.md for details.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: TLSCertificateDelegationSpec defines the spec of the CRD
          properties:
            delegations:
              items:
                description: CertificateDelegation maps the authority to reference
                  a secret in the current namespace to a set of namespaces.
                properties:
                  secretName:
                    description: required, the name of a secret in the current namespace.
                    type: string
                  targetNamespaces:
                    description: required, the namespaces the authority to reference
                      the the secret will be delegated to. If TargetNamespaces is
                      nil or empty, the CertificateDelegation' is ignored. If the
                      TargetNamespace list contains the character, "*" the secret
                      will be delegated to all namespaces.
                    items:
                      type: string
                    type: array
                required:
                - secretName
                - targetNamespaces
                type: object
              type: array
          required:
          - delegations
          type: object
      required:
      - metadata
      - spec
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: httpproxies.projectcontour.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.virtualhost.fqdn
    description: Fully qualified domain name
    name: FQDN
    type: string
  - JSONPath: .spec.virtualhost.tls.secretName
    description: Secret with TLS credentials
    name: TLS Secret
    type: string
  - JSONPath: .status.currentStatus
    description: The current status of the HTTPProxy
    name: Status
    type: string
  - JSONPath: .status.description
    description: Description of the current status
    name: Status Description
    type: string
  group: projectcontour.io
  names:
    kind: HTTPProxy
    listKind: HTTPProxyList
    plural: httpproxies
    shortNames:
    - proxy
    - proxies
    singular: httpproxy
  scope: Namespaced
  subresources: {}
  validation:
    openAPIV3Schema:
      description: HTTPProxy is an Ingress CRD specification
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: HTTPProxySpec defines the spec of the CRD.
          properties:
            includes:
              description: Includes allow for specific routing configuration to be
                appended to another HTTPProxy in another namespace.
              items:
                description: Include describes a set of policies that can be applied
                  to an HTTPProxy in a namespace.
                properties:
                  conditions:
                    description: Conditions are a set of routing properties that is
                      applied to an HTTPProxy in a namespace.
                    items:
                      description: Condition are policies that are applied on top
                        of HTTPProxies. One of Prefix or Header must be provided.
                      properties:
                        header:
                          description: Header specifies the header condition to match.
                          properties:
                            contains:
                              description: Contains specifies a substring that must
                                be present in the header value.
                              type: string
                            exact:
                              description: Exact specifies a string that the header
                                value must be equal to.
                              type: string
                            name:
                              description: Name is the name of the header to match
                                against. Name is required. Header names are case insensitive.
                              type: string
                            notcontains:
                              description: NotContains specifies a substring that
                                must not be present in the header value.
                              type: string
                            notexact:
                              description: NoExact specifies a string that the header
                                value must not be equal to. The condition is true
                                if the header has any other value.
                              type: string
                            present:
                              description: Present specifies that condition is true
                                when the named header is present, regardless of its
                                value. Note that setting Present to false does not
                                make the condition true if the named header is absent.
                              type: boolean
                          required:
                          - name
                          type: object
                        prefix:
                          description: Prefix defines a prefix match for a request.
                          type: string
                      type: object
                    type: array
                  name:
                    description: Name of the HTTPProxy
                    type: string
                  namespace:
                    description: Namespace of the HTTPProxy to include. Defaults to
                      the current namespace if not supplied.
                    type: string
                required:
                - name
                type: object
              type: array
            routes:
              description: Routes are the ingress routes. If TCPProxy is present,
                Routes is ignored.
              items:
                description: Route contains the set of routes for a virtual host.
                properties:
                  conditions:
                    description: Conditions are a set of routing properties that is
                      applied to an HTTPProxy in a namespace.
                    items:
                      description: Condition are policies that are applied on top
                        of HTTPProxies. One of Prefix or Header must be provided.
                      properties:
                        header:
                          description: Header specifies the header condition to match.
                          properties:
                            contains:
                              description: Contains specifies a substring that must
                                be present in the header value.
                              type: string
                            exact:
                              description: Exact specifies a string that the header
                                value must be equal to.
                              type: string
                            name:
                              description: Name is the name of the header to match
                                against. Name is required. Header names are case insensitive.
                              type: string
                            notcontains:
                              description: NotContains specifies a substring that
                                must not be present in the header value.
                              type: string
                            notexact:
                              description: NoExact specifies a string that the header
                                value must not be equal to. The condition is true
                                if the header has any other value.
                              type: string
                            present:
                              description: Present specifies that condition is true
                                when the named header is present, regardless of its
                                value. Note that setting Present to false does not
                                make the condition true if the named header is absent.
                              type: boolean
                          required:
                          - name
                          type: object
                        prefix:
                          description: Prefix defines a prefix match for a request.
                          type: string
                      type: object
                    type: array
                  enableWebsockets:
                    description: Enables websocket support for the route.
                    type: boolean
                  healthCheckPolicy:
                    description: The health check policy for this route.
                    properties:
                      healthyThresholdCount:
                        description: The number of healthy health checks required
                          before a host is marked healthy
                        format: int64
                        minimum: 0
                        type: integer
                      host:
                        description: The value of the host header in the HTTP health
                          check request. If left empty (default value), the name "contour-envoy-healthcheck"
                          will be used.
                        type: string
                      intervalSeconds:
                        description: The interval (seconds) between health checks
                        format: int64
                        type: integer
                      path:
                        description: HTTP endpoint used to perform health checks on
                          upstream service
                        type: string
                      timeoutSeconds:
                        description: The time to wait (seconds) for a health check
                          response
                        format: int64
                        type: integer
                      unhealthyThresholdCount:
                        description: The number of unhealthy health checks required
                          before a host is marked unhealthy
                        format: int64
                        minimum: 0
                        type: integer
                    required:
                    - path
                    type: object
                  loadBalancerPolicy:
                    description: The load balancing policy for this route.
                    properties:
                      strategy:
                        description: Strategy specifies the policy used to balance
                          requests across the pool of backend pods. Valid policy names
                          are `Random`, `RoundRobin`, `WeightedLeastRequest`, `Random`
                          and `Cookie`. If an unknown strategy name is specified or
                          no policy is supplied, the default `RoundRobin` policy is
                          used.
                        type: string
                    type: object
                  pathRewritePolicy:
                    description: The policy for rewriting the path of the request
                      URL after the request has been routed to a Service.
                    properties:
                      replacePrefix:
                        description: ReplacePrefix describes how the path prefix should
                          be replaced.
                        items:
                          description: ReplacePrefix describes a path prefix replacement.
                          properties:
                            prefix:
                              description: "Prefix specifies the URL path prefix to
                                be replaced. \n If Prefix is specified, it must exactly
                                match the Condition prefix that is rendered by the
                                chain of including HTTPProxies and only that path
                                prefix will be replaced by Replacement. This allows
                                HTTPProxies that are included through multiple roots
                                to only replace specific path prefixes, leaving others
                                unmodified. \n If Prefix is not specified, all routing
                                prefixes rendered by the include chain will be replaced."
                              minLength: 1
                              type: string
                            replacement:
                              description: Replacement is the string that the routing
                                path prefix will be replaced with. This must not be
                                empty.
                              minLength: 1
                              type: string
                          required:
                          - replacement
                          type: object
                        type: array
                    type: object
                  permitInsecure:
                    description: Allow this path to respond to insecure requests over
                      HTTP which are normally not permitted when a `virtualhost.tls`
                      block is present.
                    type: boolean
                  requestHeadersPolicy:
                    description: The policy for managing request headers during proxying
                    properties:
                      remove:
                        description: Remove specifies a list of HTTP header names
                          to remove
                        items:
                          type: string
                        type: array
                      set:
                        description: Set specifies a list of HTTP header values that
                          will be set in the HTTP header
                        items:
                          description: HeaderValue represents a header name/value
                            pair
                          properties:
                            name:
                              description: Name represents a key of a header
                              minLength: 1
                              type: string
                            value:
                              description: Value represents the value of a header
                                specified by a key
                              minLength: 1
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                    type: object
                  responseHeadersPolicy:
                    description: The policy for managing response headers during proxying
                    properties:
                      remove:
                        description: Remove specifies a list of HTTP header names
                          to remove
                        items:
                          type: string
                        type: array
                      set:
                        description: Set specifies a list of HTTP header values that
                          will be set in the HTTP header
                        items:
                          description: HeaderValue represents a header name/value
                            pair
                          properties:
                            name:
                              description: Name represents a key of a header
                              minLength: 1
                              type: string
                            value:
                              description: Value represents the value of a header
                                specified by a key
                              minLength: 1
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                    type: object
                  retryPolicy:
                    description: The retry policy for this route.
                    properties:
                      count:
                        description: NumRetries is maximum allowed number of retries.
                          If not supplied, the number of retries is one.
                        format: int64
                        minimum: 0
                        type: integer
                      perTryTimeout:
                        description: PerTryTimeout specifies the timeout per retry
                          attempt. Ignored if NumRetries is not supplied.
                        type: string
                    type: object
                  services:
                    description: Services are the services to proxy traffic.
                    items:
                      description: Service defines an Kubernetes Service to proxy
                        traffic.
                      properties:
                        mirror:
                          description: If Mirror is true the Service will receive
                            a read only mirror of the traffic for this route.
                          type: boolean
                        name:
                          description: Name is the name of Kubernetes service to proxy
                            traffic. Names defined here will be used to look up corresponding
                            endpoints which contain the ips to route.
                          type: string
                        port:
                          description: Port (defined as Integer) to proxy traffic
                            to since a service can have multiple defined.
                          type: integer
                        protocol:
                          description: Protocol may be used to specify (or override)
                            the protocol used to reach this Service. Values may be
                            tls, h2, h2c. If omitted, protocol-selection falls back
                            on Service annotations.
                          enum:
                          - h2
                          - h2c
                          - tls
                          type: string
                        requestHeadersPolicy:
                          description: The policy for managing request headers during
                            proxying
                          properties:
                            remove:
                              description: Remove specifies a list of HTTP header
                                names to remove
                              items:
                                type: string
                              type: array
                            set:
                              description: Set specifies a list of HTTP header values
                                that will be set in the HTTP header
                              items:
                                description: HeaderValue represents a header name/value
                                  pair
                                properties:
                                  name:
                                    description: Name represents a key of a header
                                    minLength: 1
                                    type: string
                                  value:
                                    description: Value represents the value of a header
                                      specified by a key
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                          type: object
                        responseHeadersPolicy:
                          description: The policy for managing response headers during
                            proxying
                          properties:
                            remove:
                              description: Remove specifies a list of HTTP header
                                names to remove
                              items:
                                type: string
                              type: array
                            set:
                              description: Set specifies a list of HTTP header values
                                that will be set in the HTTP header
                              items:
                                description: HeaderValue represents a header name/value
                                  pair
                                properties:
                                  name:
                                    description: Name represents a key of a header
                                    minLength: 1
                                    type: string
                                  value:
                                    description: Value represents the value of a header
                                      specified by a key
                                    minLength: 1
                                    type: string
                                required:
                                - name
                                - value
                                type: object
                              type: array
                          type: object
                        validation:
                          description: UpstreamValidation defines how to verify the
                            backend service's certificate
                          properties:
                            caSecret:
                              description: Name of the Kubernetes secret be used to
                                validate the certificate presented by the backend
                              type: string
                            subjectName:
                              description: Key which is expected to be present in
                                the 'subjectAltName' of the presented certificate
                              type: string
                          required:
                          - caSecret
                          - subjectName
                          type: object
                        weight:
                          description: Weight defines percentage of traffic to balance
                            traffic
                          format: int64
                          minimum: 0
                          type: integer
                      required:
                      - name
                      - port
                      type: object
                    minItems: 1
                    type: array
                  timeoutPolicy:
                    description: The timeout policy for this route.
                    properties:
                      idle:
                        description: Timeout after which if there are no active requests
                          for this route, the connection between Envoy and the backend
                          will be closed. If not specified, there is no per-route
                          idle timeout.
                        type: string
                      response:
                        description: Timeout for receiving a response from the server
                          after processing a request from client. If not supplied
                          the timeout duration is undefined.
                        type: string
                    type: object
                required:
                - services
                type: object
              type: array
            tcpproxy:
              description: TCPProxy holds TCP proxy information.
              properties:
                healthCheckPolicy:
                  description: The health check policy for this tcp proxy
                  properties:
                    healthyThresholdCount:
                      description: The number of healthy health checks required before
                        a host is marked healthy
                      format: int32
                      type: integer
                    intervalSeconds:
                      description: The interval (seconds) between health checks
                      format: int64
                      type: integer
                    timeoutSeconds:
                      description: The time to wait (seconds) for a health check response
                      format: int64
                      type: integer
                    unhealthyThresholdCount:
                      description: The number of unhealthy health checks required
                        before a host is marked unhealthy
                      format: int32
                      type: integer
                  type: object
                include:
                  description: Include specifies that this tcpproxy should be delegated
                    to another HTTPProxy.
                  properties:
                    name:
                      description: Name of the child HTTPProxy
                      type: string
                    namespace:
                      description: Namespace of the HTTPProxy to include. Defaults
                        to the current namespace if not supplied.
                      type: string
                  required:
                  - name
                  type: object
                includes:
                  description: "IncludesDeprecated allow for specific routing configuration
                    to be appended to another HTTPProxy in another namespace. \n Exists
                    due to a mistake when developing HTTPProxy and the field was marked
                    plural when it should have been singular. This field should stay
                    to not break backwards compatibility to v1 users."
                  properties:
                    name:
                      description: Name of the child HTTPProxy
                      type: string
                    namespace:
                      description: Namespace of the HTTPProxy to include. Defaults
                        to the current namespace if not supplied.
                      type: string
                  required:
                  - name
                  type: object
                loadBalancerPolicy:
                  description: The load balancing policy for the backend services.
                  properties:
                    strategy:
                      description: Strategy specifies the policy used to balance requests
                        across the pool of backend pods. Valid policy names are `Random`,
                        `RoundRobin`, `WeightedLeastRequest`, `Random` and `Cookie`.
                        If an unknown strategy name is specified or no policy is supplied,
                        the default `RoundRobin` policy is used.
                      type: string
                  type: object
                services:
                  description: Services are the services to proxy traffic
                  items:
                    description: Service defines an Kubernetes Service to proxy traffic.
                    properties:
                      mirror:
                        description: If Mirror is true the Service will receive a
                          read only mirror of the traffic for this route.
                        type: boolean
                      name:
                        description: Name is the name of Kubernetes service to proxy
                          traffic. Names defined here will be used to look up corresponding
                          endpoints which contain the ips to route.
                        type: string
                      port:
                        description: Port (defined as Integer) to proxy traffic to
                          since a service can have multiple defined.
                        type: integer
                      protocol:
                        description: Protocol may be used to specify (or override)
                          the protocol used to reach this Service. Values may be tls,
                          h2, h2c. If omitted, protocol-selection falls back on Service
                          annotations.
                        enum:
                        - h2
                        - h2c
                        - tls
                        type: string
                      requestHeadersPolicy:
                        description: The policy for managing request headers during
                          proxying
                        properties:
                          remove:
                            description: Remove specifies a list of HTTP header names
                              to remove
                            items:
                              type: string
                            type: array
                          set:
                            description: Set specifies a list of HTTP header values
                              that will be set in the HTTP header
                            items:
                              description: HeaderValue represents a header name/value
                                pair
                              properties:
                                name:
                                  description: Name represents a key of a header
                                  minLength: 1
                                  type: string
                                value:
                                  description: Value represents the value of a header
                                    specified by a key
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                        type: object
                      responseHeadersPolicy:
                        description: The policy for managing response headers during
                          proxying
                        properties:
                          remove:
                            description: Remove specifies a list of HTTP header names
                              to remove
                            items:
                              type: string
                            type: array
                          set:
                            description: Set specifies a list of HTTP header values
                              that will be set in the HTTP header
                            items:
                              description: HeaderValue represents a header name/value
                                pair
                              properties:
                                name:
                                  description: Name represents a key of a header
                                  minLength: 1
                                  type: string
                                value:
                                  description: Value represents the value of a header
                                    specified by a key
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            type: array
                        type: object
                      validation:
                        description: UpstreamValidation defines how to verify the
                          backend service's certificate
                        properties:
                          caSecret:
                            description: Name of the Kubernetes secret be used to
                              validate the certificate presented by the backend
                            type: string
                          subjectName:
                            description: Key which is expected to be present in the
                              'subjectAltName' of the presented certificate
                            type: string
                        required:
                        - caSecret
                        - subjectName
                        type: object
                      weight:
                        description: Weight defines percentage of traffic to balance
                          traffic
                        format: int64
                        minimum: 0
                        type: integer
                    required:
                    - name
                    - port
                    type: object
                  minItems: 1
                  type: array
              required:
              - services
              type: object
            virtualhost:
              description: Virtualhost appears at most once. If it is present, the
                object is considered to be a "root".
              properties:
                fqdn:
                  description: The fully qualified domain name of the root of the
                    ingress tree all leaves of the DAG rooted at this object relate
                    to the fqdn
                  type: string
                tls:
                  description: If present describes tls properties. The SNI names
                    that will be matched on are described in fqdn, the tls.secretName
                    secret must contain a matching certificate
                  properties:
                    minimumProtocolVersion:
                      description: Minimum TLS version this vhost should negotiate
                      type: string
                    passthrough:
                      description: If Passthrough is set to true, the SecretName will
                        be ignored and the encrypted handshake will be passed through
                        to the backing cluster.
                      type: boolean
                    secretName:
                      description: required, the name of a secret in the current namespace
                      type: string
                  type: object
              required:
              - fqdn
              type: object
          type: object
        status:
          description: Status reports the current state of the HTTPProxy.
          properties:
            currentStatus:
              type: string
            description:
              type: string
          type: object
      required:
      - metadata
      - spec
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: tlscertificatedelegations.projectcontour.io
spec:
  group: projectcontour.io
  names:
    kind: TLSCertificateDelegation
    listKind: TLSCertificateDelegationList
    plural: tlscertificatedelegations
    shortNames:
    - tlscerts
    singular: tlscertificatedelegation
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: TLSCertificateDelegation is an TLS Certificate Delegation CRD specificiation.
        See design/tls-certificate-delegation.md for details.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: TLSCertificateDelegationSpec defines the spec of the CRD
          properties:
            delegations:
              items:
                description: CertificateDelegation maps the authority to reference
                  a secret in the current namespace to a set of namespaces.
                properties:
                  secretName:
                    description: required, the name of a secret in the current namespace.
                    type: string
                  targetNamespaces:
                    description: required, the namespaces the authority to reference
                      the the secret will be delegated to. If TargetNamespaces is
                      nil or empty, the CertificateDelegation' is ignored. If the
                      TargetNamespace list contains the character, "*" the secret
                      will be delegated to all namespaces.
                    items:
                      type: string
                    type: array
                required:
                - secretName
                - targetNamespaces
                type: object
              type: array
          required:
          - delegations
          type: object
      required:
      - metadata
      - spec
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contour-certgen
  namespace: mink-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: contour
  namespace: mink-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: contour-certgen
subjects:
- kind: ServiceAccount
  name: contour-certgen
  namespace: mink-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: contour-certgen
  namespace: mink-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
  - create
  - get
  - put
  - post
  - patch
---
apiVersion: batch/v1
kind: Job
metadata:
  name: contour-certgen
  namespace: mink-system
spec:
  ttlSecondsAfterFinished: 0
  template:
    metadata:
      labels:
        app: "contour-certgen"
    spec:
      containers:
      - name: contour
        image: docker.io/mattmoor/contour:v0.14.0@sha256:7c8abf0b744f698362fa792b85fca59c6601f5c8793d7bb9ea6a9e045de310b2
        imagePullPolicy: Always
        command:
        - contour
        - certgen
        - --incluster
        - --kube
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      restartPolicy: Never
      serviceAccountName: contour-certgen
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
  parallelism: 1
  completions: 1
  backoffLimit: 1

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: googlecloudsqlbindings.bindings.mattmoor.dev
  labels:
    bindings.mattmoor.dev/release: devel
    mattmoor.dev/crd-install: "true"
    duck.knative.dev/binding: "true"
spec:
  group: bindings.mattmoor.dev
  version: v1alpha1
  names:
    kind: GoogleCloudSQLBinding
    plural: googlecloudsqlbindings
    singular: googlecloudsqlbinding
    categories:
    - all
    - mattmoor
    shortNames:
    - gsqlb
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: githubbindings.bindings.mattmoor.dev
  labels:
    bindings.mattmoor.dev/release: devel
    mattmoor.dev/crd-install: "true"
    duck.knative.dev/binding: "true"
spec:
  group: bindings.mattmoor.dev
  version: v1alpha1
  names:
    kind: GithubBinding
    plural: githubbindings
    singular: githubbinding
    categories:
    - all
    - mattmoor
    shortNames:
    - ghb
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: slackbindings.bindings.mattmoor.dev
  labels:
    bindings.mattmoor.dev/release: devel
    mattmoor.dev/crd-install: "true"
    duck.knative.dev/binding: "true"
spec:
  group: bindings.mattmoor.dev
  version: v1alpha1
  names:
    kind: SlackBinding
    plural: slackbindings
    singular: slackbinding
    categories:
    - all
    - mattmoor
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sqlbindings.bindings.mattmoor.dev
  labels:
    bindings.mattmoor.dev/release: devel
    mattmoor.dev/crd-install: "true"
    duck.knative.dev/binding: "true"
spec:
  group: bindings.mattmoor.dev
  version: v1alpha1
  names:
    kind: SQLBinding
    plural: sqlbindings
    singular: sqlbinding
    categories:
    - all
    - mattmoor
    shortNames:
    - sqlb
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: twitterbindings.bindings.mattmoor.dev
  labels:
    bindings.mattmoor.dev/release: devel
    mattmoor.dev/crd-install: "true"
    duck.knative.dev/binding: "true"
spec:
  group: bindings.mattmoor.dev
  version: v1alpha1
  names:
    kind: TwitterBinding
    plural: twitterbindings
    singular: twitterbinding
    categories:
    - all
    - mattmoor
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    knative.dev/release: devel
    eventing.knative.dev/source: "true"
    duck.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  annotations:
    # TODO add schemas and descriptions
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.knative.apiserver.resource.add" },
        { "type": "dev.knative.apiserver.resource.delete" },
        { "type": "dev.knative.apiserver.resource.update" },
        { "type": "dev.knative.apiserver.ref.add" },
        { "type": "dev.knative.apiserver.ref.delete" },
        { "type": "dev.knative.apiserver.ref.update" }
      ]
  name: apiserversources.sources.knative.dev
spec:
  group: sources.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    kind: ApiServerSource
    plural: apiserversources
  scope: Namespaced
  subresources:
    status: {}
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flesh out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: Sink
    type: string
    JSONPath: ".status.sinkUri"
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1alpha2
    served: true
    storage: false

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: brokers.eventing.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
    duck.knative.dev/addressable: "true"
spec:
  group: eventing.knative.dev
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flush out the
      # schema for each version at this time as well as ensure
      # that different Broker Classes that might have different
      # fields that are not in the Broker Spec will work.
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  names:
    kind: Broker
    plural: brokers
    singular: broker
    categories:
    - all
    - knative
    - eventing
  scope: Namespaced
  subresources:
    status: {}
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  - name: URL
    type: string
    JSONPath: .status.address.url
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: channels.messaging.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
    messaging.knative.dev/subscribable: "true"
    duck.knative.dev/addressable: "true"
spec:
  group: messaging.knative.dev
  preserveUnknownFields: false
  names:
    kind: Channel
    plural: channels
    singular: channel
    categories:
    - all
    - knative
    - messaging
    - channel
    shortNames:
    - ch
  scope: Namespaced
  subresources:
    status: {}
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  - name: URL
    type: string
    JSONPath: .status.address.url
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            properties:
              channelTemplate:
                description: "Channel implementation which dictates the durability
                  guarantees of events. If not specified then the default channel
                  is used. More information: https://knative.dev/docs/eventing/channels/default-channels."
                type: object
                properties:
                  apiVersion:
                    type: string
                    description: "API version of the channel implementation."
                    minLength: 1
                  kind:
                    type: string
                    description: "Kind of the channel implementation to use (InMemoryChannel,
                      KafkaChannel, etc.)."
                    minLength: 1
                  spec:
                    type: object
                required:
                - apiVersion
                - kind
              subscribable:
                type: object
                properties:
                  subscribers:
                    type: array
                    description: "Events received on the channel are forwarded to
                      its subscribers."
                    items:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                      required:
                      - uid
                      properties:
                        ref:
                          type: object
                          description: "a reference to a Kubernetes object from which
                            to retrieve the target URI."
                          x-kubernetes-preserve-unknown-fields: true
                          required:
                          - namespace
                          - name
                          - uid
                          properties:
                            apiVersion:
                              type: string
                            kind:
                              type: string
                            name:
                              type: string
                              minLength: 1
                            namespace:
                              type: string
                              minLength: 1
                            uid:
                              type: string
                              minLength: 1
                        uid:
                          type: string
                          description: "Used to understand the origin of the subscriber."
                          minLength: 1
                        subscriberURI:
                          type: string
                          description: "Endpoint for the subscriber."
                          minLength: 1
                        replyURI:
                          type: string
                          description: "Endpoint for the reply."
                          minLength: 1
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
  - name: v1beta1
    served: true
    storage: false
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/release: devel
    eventing.knative.dev/source: "true"
    duck.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  name: containersources.sources.knative.dev
spec:
  group: sources.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    kind: ContainerSource
    plural: containersources
  scope: Namespaced
  subresources:
    status: {}
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flesh out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: Sink
    type: string
    JSONPath: ".status.sinkUri"
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha2
    served: true
    storage: true

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: eventtypes.eventing.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: eventing.knative.dev
  names:
    kind: EventType
    plural: eventtypes
    singular: eventtype
    categories:
    - all
    - knative
    - eventing
  scope: Namespaced
  subresources:
    status: {}
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flesh out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  additionalPrinterColumns:
  - name: Type
    type: string
    JSONPath: ".spec.type"
  - name: Source
    type: string
    JSONPath: ".spec.source"
  - name: Schema
    type: string
    JSONPath: ".spec.schema"
  - name: Broker
    type: string
    JSONPath: ".spec.broker"
  - name: Description
    type: string
    JSONPath: ".spec.description"
  - # TODO remove Status https://github.com/knative/eventing/issues/2750
    name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: parallels.flows.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
    duck.knative.dev/addressable: "true"
spec:
  group: flows.knative.dev
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flush out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  names:
    kind: Parallel
    plural: parallels
    singular: parallel
    categories:
    - all
    - knative
    - eventing
    - flows
  scope: Namespaced
  subresources:
    status: {}
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  - name: URL
    type: string
    JSONPath: .status.address.url
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/release: devel
    eventing.knative.dev/source: "true"
    duck.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  annotations:
    # TODO add schemas and descriptions
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.knative.sources.ping" }
      ]
  name: pingsources.sources.knative.dev
spec:
  group: sources.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    kind: PingSource
    plural: pingsources
  scope: Namespaced
  subresources:
    status: {}
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flesh out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: Sink
    type: string
    JSONPath: .status.sinkUri
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1alpha2
    served: true
    storage: false

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: sequences.flows.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
    duck.knative.dev/addressable: "true"
spec:
  group: flows.knative.dev
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flush out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  names:
    kind: Sequence
    plural: sequences
    singular: sequence
    categories:
    - all
    - knative
    - eventing
    - flows
  scope: Namespaced
  subresources:
    status: {}
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  - name: URL
    type: string
    JSONPath: .status.address.url
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    knative.dev/release: devel
    eventing.knative.dev/source: "true"
    duck.knative.dev/source: "true"
    duck.knative.dev/binding: "true"
    knative.dev/crd-install: "true"
  name: sinkbindings.sources.knative.dev
spec:
  group: sources.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    - bindings
    kind: SinkBinding
    plural: sinkbindings
  scope: Namespaced
  subresources:
    status: {}
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flesh out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: Sink
    type: string
    JSONPath: ".status.sinkUri"
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1alpha2
    served: true
    storage: false

---
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: subscriptions.messaging.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: messaging.knative.dev
  preserveUnknownFields: false
  names:
    kind: Subscription
    plural: subscriptions
    singular: subscription
    categories:
    - all
    - knative
    - eventing
    shortNames:
    - sub
  scope: Namespaced
  subresources:
    status: {}
  conversion:
    strategy: None
    #    strategy: Webhook
    #    webhookClientConfig:
    #      service:
    #        name: webhook
    #        namespace: mink-system
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      type: object
      properties:
        spec:
          required:
          - channel
          type: object
          properties:
            channel:
              type: object
              description: "Channel that forwards incoming events to the subscription."
              required:
              - apiVersion
              - kind
              - name
              properties:
                apiVersion:
                  type: string
                  minLength: 1
                kind:
                  type: string
                name:
                  type: string
                  minLength: 1
            subscriber:
              type: object
              description: "the subscriber that (optionally) processes events."
              properties:
                uri:
                  type: string
                  description: "the target URI or, if ref is provided, a relative
                    URI reference that will be combined with ref to produce a target
                    URI."
                  minLength: 1
                ref:
                  type: object
                  description: "a reference to a Kubernetes object from which to retrieve
                    the target URI."
                  required:
                  - apiVersion
                  - kind
                  - name
                  properties:
                    apiVersion:
                      type: string
                      minLength: 1
                    kind:
                      type: string
                      minLength: 1
                    name:
                      type: string
                      minLength: 1
                    namespace:
                      type: string
                      minLength: 1
            reply:
              type: object
              description: "the destination that (optionally) receive events."
              properties:
                uri:
                  type: string
                  description: "the target URI or, if ref is provided, a relative
                    URI reference that will be combined with ref to produce a target
                    URI."
                  minLength: 1
                ref:
                  type: object
                  description: "a reference to a Kubernetes object from which to retrieve
                    the target URI."
                  required:
                  - apiVersion
                  - kind
                  - name
                  properties:
                    apiVersion:
                      type: string
                      minLength: 1
                    kind:
                      type: string
                      minLength: 1
                    name:
                      type: string
                      minLength: 1
                    namespace:
                      type: string
                      minLength: 1
            delivery:
              description: "Subscription delivery options. More information: https://knative.dev/docs/eventing/event-delivery."
              type: object
              x-kubernetes-preserve-unknown-fields: true
        status:
          type: object
          x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: triggers.eventing.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: eventing.knative.dev
  preserveUnknownFields: false
  names:
    kind: Trigger
    plural: triggers
    singular: trigger
    categories:
    - all
    - knative
    - eventing
  scope: Namespaced
  subresources:
    status: {}
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  - name: Broker
    type: string
    JSONPath: .spec.broker
  - name: Subscriber_URI
    type: string
    JSONPath: .status.subscriberURI
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            required:
            - subscriber
            type: object
            properties:
              broker:
                type: string
                description: "Broker that this trigger receives events from. If not
                  specified, will default to 'default'."
              filter:
                type: object
                properties:
                  sourceAndType:
                    type: object
                    properties:
                      type:
                        type: string
                      source:
                        type: string
                  attributes:
                    type: object
                    description: "Map of CloudEvents attributes used for filtering
                      events."
                    additionalProperties:
                      type: string
              subscriber:
                type: object
                description: "the destination that should receive events."
                properties:
                  ref:
                    type: object
                    description: "a reference to a Kubernetes object from which to
                      retrieve the target URI."
                    required:
                    - apiVersion
                    - kind
                    - name
                    properties:
                      apiVersion:
                        type: string
                        minLength: 1
                      kind:
                        type: string
                        minLength: 1
                      namespace:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                  uri:
                    type: string
                    description: "the target URI or, if ref is provided, a relative
                      URI reference that will be combined with ref to produce a target
                      URI."
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
  - name: v1beta1
    served: true
    storage: false
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            required:
            - subscriber
            type: object
            properties:
              broker:
                type: string
                description: "Broker that this trigger receives events from. If not
                  specified, will default to 'default'."
              filter:
                type: object
                properties:
                  attributes:
                    type: object
                    description: "Map of CloudEvents attributes used for filtering
                      events."
                    additionalProperties:
                      type: string
              subscriber:
                type: object
                description: "the destination that should receive events."
                properties:
                  ref:
                    type: object
                    description: "a reference to a Kubernetes object from which to
                      retrieve the target URI."
                    required:
                    - apiVersion
                    - kind
                    - name
                    properties:
                      apiVersion:
                        type: string
                        minLength: 1
                      kind:
                        type: string
                        minLength: 1
                      namespace:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                  uri:
                    type: string
                    description: "the target URI or, if ref is provided, a relative
                      URI reference that will be combined with ref to produce a target
                      URI."
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: githubsources.sources.knative.dev
  labels:
    contrib.knative.dev/release: devel
    eventing.knative.dev/source: "true"
    duck.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  annotations:
    # TODO add schemas and descriptions
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.knative.source.github.check_suite" },
        { "type": "dev.knative.source.github.commit_comment" },
        { "type": "dev.knative.source.github.create" },
        { "type": "dev.knative.source.github.delete" },
        { "type": "dev.knative.source.github.deployment" },
        { "type": "dev.knative.source.github.deployment_status" },
        { "type": "dev.knative.source.github.fork" },
        { "type": "dev.knative.source.github.gollum" },
        { "type": "dev.knative.source.github.installation" },
        { "type": "dev.knative.source.github.integration_installation" },
        { "type": "dev.knative.source.github.issue_comment" },
        { "type": "dev.knative.source.github.issues" },
        { "type": "dev.knative.source.github.label" },
        { "type": "dev.knative.source.github.member" },
        { "type": "dev.knative.source.github.membership" },
        { "type": "dev.knative.source.github.milestone" },
        { "type": "dev.knative.source.github.organization" },
        { "type": "dev.knative.source.github.org_block" },
        { "type": "dev.knative.source.github.page_build" },
        { "type": "dev.knative.source.github.ping" },
        { "type": "dev.knative.source.github.project_card" },
        { "type": "dev.knative.source.github.project_column" },
        { "type": "dev.knative.source.github.project" },
        { "type": "dev.knative.source.github.public" },
        { "type": "dev.knative.source.github.pull_request" },
        { "type": "dev.knative.source.github.pull_request_review" },
        { "type": "dev.knative.source.github.pull_request_review_comment" },
        { "type": "dev.knative.source.github.push" },
        { "type": "dev.knative.source.github.release" },
        { "type": "dev.knative.source.github.repository" },
        { "type": "dev.knative.source.github.status" },
        { "type": "dev.knative.source.github.team" },
        { "type": "dev.knative.source.github.team_add" },
        { "type": "dev.knative.source.github.watch" }
      ]
spec:
  group: sources.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    kind: GitHubSource
    plural: githubsources
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: Sink
    type: string
    JSONPath: ".status.sinkUri"
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            accessToken:
              properties:
                secretKeyRef:
                  type: object
              type: object
            eventTypes:
              items:
                enum:
                - check_suite
                - commit_comment
                - create
                - delete
                - deployment
                - deployment_status
                - fork
                - gollum
                - installation
                - integration_installation
                - issue_comment
                - issues
                - label
                - member
                - membership
                - milestone
                - organization
                - org_block
                - page_build
                - ping
                - project_card
                - project_column
                - project
                - public
                - pull_request
                - pull_request_review
                - pull_request_review_comment
                - push
                - release
                - repository
                - status
                - team
                - team_add
                - watch
                type: string
              minItems: 1
              type: array
            ownerAndRepository:
              minLength: 1
              type: string
            secretToken:
              properties:
                secretKeyRef:
                  type: object
              type: object
            serviceAccountName:
              type: string
            sink:
              anyOf:
              - type: object
                description: "the destination that should receive events."
                properties:
                  ref:
                    type: object
                    description: "a reference to a Kubernetes object from which to
                      retrieve the target URI."
                    required:
                    - apiVersion
                    - kind
                    - name
                    properties:
                      apiVersion:
                        type: string
                        minLength: 1
                      kind:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                  uri:
                    type: string
                    description: "the target URI. If ref is provided, this must be
                      relative URI reference."
              - type: object
                description: "DEPRECATED: a reference to a Kubernetes object from
                  which to retrieve the target URI."
                required:
                - apiVersion
                - kind
                - name
                properties:
                  apiVersion:
                    type: string
                    minLength: 1
                  kind:
                    type: string
                    minLength: 1
                  name:
                    type: string
                    minLength: 1
                  uri:
                    type: string
                    description: "the target URI. If ref is provided, this must be
                      relative URI reference."
          required:
          - ownerAndRepository
          - eventTypes
          - accessToken
          - secretToken
          type: object
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    # we use a string in the stored object but a wrapper object
                    # at runtime.
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            sinkUri:
              type: string
            webhookIDKey:
              type: string
          type: object
  version: v1alpha1

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    contrib.knative.dev/release: devel
    eventing.knative.dev/source: "true"
    duck.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.knative.kafka.event" }
      ]
  name: kafkasources.sources.knative.dev
spec:
  group: sources.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    kind: KafkaSource
    plural: kafkasources
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Topics
    type: string
    JSONPath: ".spec.topics"
  - name: BootstrapServers
    type: string
    JSONPath: ".spec.bootstrapServers"
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            bootstrapServers:
              type: string
              minLength: 1
            topics:
              type: string
              minLength: 1
            consumerGroup:
              type: string
              minLength: 1
            net:
              properties:
                sasl:
                  properties:
                    enable:
                      type: boolean
                    password:
                      properties:
                        secretKeyRef:
                          type: object
                      type: object
                    user:
                      properties:
                        secretKeyRef:
                          type: object
                      type: object
                  type: object
                tls:
                  properties:
                    caCert:
                      properties:
                        secretKeyRef:
                          type: object
                      type: object
                    cert:
                      properties:
                        secretKeyRef:
                          type: object
                      type: object
                    enable:
                      type: boolean
                    key:
                      properties:
                        secretKeyRef:
                          type: object
                      type: object
                  type: object
              type: object
            resources:
              properties:
                limits:
                  properties:
                    cpu:
                      type: string
                    memory:
                      type: string
                  type: object
                requests:
                  properties:
                    cpu:
                      type: string
                    memory:
                      type: string
                  type: object
              type: object
            serviceAccountName:
              type: string
            sink:
              anyOf:
              - type: object
                description: "the destination that should receive events."
                properties:
                  ref:
                    type: object
                    description: "a reference to a Kubernetes object from which to
                      retrieve the target URI."
                    required:
                    - apiVersion
                    - kind
                    - name
                    properties:
                      apiVersion:
                        type: string
                        minLength: 1
                      kind:
                        type: string
                        minLength: 1
                      name:
                        type: string
                        minLength: 1
                  uri:
                    type: string
                    description: "the target URI. If ref is provided, this must be
                      relative URI reference."
              - type: object
                description: "DEPRECATED: a reference to a Kubernetes object from
                  which to retrieve the target URI."
                required:
                - apiVersion
                - kind
                - name
                properties:
                  apiVersion:
                    type: string
                    minLength: 1
                  kind:
                    type: string
                    minLength: 1
                  name:
                    type: string
                    minLength: 1
                  uri:
                    type: string
                    description: "the target URI. If ref is provided, this must be
                      relative URI reference."
          type: object
          required:
          - bootstrapServers
          - topics
          - consumerGroup
        status:
          properties:
            conditions:
              items:
                properties:
                  lastTransitionTime:
                    type: string
                  message:
                    type: string
                  reason:
                    type: string
                  severity:
                    type: string
                  status:
                    type: string
                  type:
                    type: string
                required:
                - type
                - status
                type: object
              type: array
            observedGeneration:
              format: int64
              type: integer
            sinkUri:
              type: string
          type: object
  version: v1alpha1

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    sources.vaikas.dev/release: devel
    eventing.knative.dev/source: "true"
    knative.dev/crd-install: "true"
  annotations:
    registry.knative.dev/eventTypes: |
      [
        { "type": "dev.vaikas.postgres" }
      ]
  name: postgressources.sources.vaikas.dev
spec:
  group: sources.vaikas.dev
  names:
    categories:
    - all
    - knative
    - eventing
    - sources
    kind: PostgresSource
    plural: postgressources
  scope: Namespaced
  subresources:
    status: {}
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flesh out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"
  - name: Sink
    type: string
    JSONPath: .status.sinkUri
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha1
    served: true
    storage: true

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: certificates.networking.internal.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: networking.internal.knative.dev
  version: v1alpha1
  names:
    kind: Certificate
    plural: certificates
    singular: certificate
    categories:
    - knative-internal
    - networking
    shortNames:
    - kcert
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: configurations.serving.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
    duck.knative.dev/podspecable: "true"
spec:
  group: serving.knative.dev
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flush out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1beta1
    served: true
    storage: false
  - name: v1
    served: true
    storage: true
  names:
    kind: Configuration
    plural: configurations
    singular: configuration
    categories:
    - all
    - knative
    - serving
    shortNames:
    - config
    - cfg
  scope: Namespaced
  subresources:
    status: {}
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: LatestCreated
    type: string
    JSONPath: .status.latestCreatedRevisionName
  - name: LatestReady
    type: string
    JSONPath: .status.latestReadyRevisionName
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: images.caching.internal.knative.dev
  labels:
    knative.dev/crd-install: "true"
spec:
  group: caching.internal.knative.dev
  version: v1alpha1
  names:
    kind: Image
    plural: images
    singular: image
    categories:
    - knative-internal
    - caching
    shortNames:
    - img
  scope: Namespaced
  subresources:
    status: {}

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: ingresses.networking.internal.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: networking.internal.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: Ingress
    plural: ingresses
    singular: ingress
    categories:
    - knative-internal
    - networking
    shortNames:
    - kingress
    - king
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: metrics.autoscaling.internal.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: autoscaling.internal.knative.dev
  version: v1alpha1
  names:
    kind: Metric
    plural: metrics
    singular: metric
    categories:
    - knative-internal
    - autoscaling
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: podautoscalers.autoscaling.internal.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: autoscaling.internal.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: PodAutoscaler
    plural: podautoscalers
    singular: podautoscaler
    categories:
    - knative-internal
    - autoscaling
    shortNames:
    - kpa
    - pa
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: DesiredScale
    type: integer
    JSONPath: ".status.desiredScale"
  - name: ActualScale
    type: integer
    JSONPath: ".status.actualScale"
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: revisions.serving.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: serving.knative.dev
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flush out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1beta1
    served: true
    storage: false
  - name: v1
    served: true
    storage: true
  names:
    kind: Revision
    plural: revisions
    singular: revision
    categories:
    - all
    - knative
    - serving
    shortNames:
    - rev
  scope: Namespaced
  subresources:
    status: {}
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: Config Name
    type: string
    JSONPath: ".metadata.labels['serving\\.knative\\.dev/configuration']"
  - name: K8s Service Name
    type: string
    JSONPath: ".status.serviceName"
  - name: Generation
    type: string # int in string form :(
    JSONPath: ".metadata.labels['serving\\.knative\\.dev/configurationGeneration']"
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: routes.serving.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
    duck.knative.dev/addressable: "true"
spec:
  group: serving.knative.dev
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flush out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1beta1
    served: true
    storage: false
  - name: v1
    served: true
    storage: true
  names:
    kind: Route
    plural: routes
    singular: route
    categories:
    - all
    - knative
    - serving
    shortNames:
    - rt
  scope: Namespaced
  subresources:
    status: {}
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: URL
    type: string
    JSONPath: .status.url
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: serverlessservices.networking.internal.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
spec:
  group: networking.internal.knative.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  names:
    kind: ServerlessService
    plural: serverlessservices
    singular: serverlessservice
    categories:
    - knative-internal
    - networking
    shortNames:
    - sks
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Mode
    type: string
    JSONPath: ".spec.mode"
  - name: Activators
    type: integer
    JSONPath: ".spec.numActivators"
  - name: ServiceName
    type: string
    JSONPath: ".status.serviceName"
  - name: PrivateServiceName
    type: string
    JSONPath: ".status.privateServiceName"
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: services.serving.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
    duck.knative.dev/addressable: "true"
    duck.knative.dev/podspecable: "true"
spec:
  group: serving.knative.dev
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flush out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1beta1
    served: true
    storage: false
  - name: v1
    served: true
    storage: true
  names:
    kind: Service
    plural: services
    singular: service
    categories:
    - all
    - knative
    - serving
    shortNames:
    - kservice
    - ksvc
  scope: Namespaced
  subresources:
    status: {}
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: URL
    type: string
    JSONPath: .status.url
  - name: LatestCreated
    type: string
    JSONPath: .status.latestCreatedRevisionName
  - name: LatestReady
    type: string
    JSONPath: .status.latestReadyRevisionName
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: autoscaler
  namespace: mink-system
  labels:
    knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autoscaler
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: autoscaler
        knative.dev/release: devel
    spec:
      serviceAccountName: controller
      containers:
      - name: autoscaler
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: docker.io/mattmoor/autoscaler:v0.14.0@sha256:450d2c604250e4d5541258e369a627d7bc8155a4e25da318b2323e3019a75e77
        resources:
          requests:
            cpu: 30m
            memory: 40Mi
          limits:
            cpu: 300m
            memory: 400Mi
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - # TODO(https://github.com/knative/pkg/pull/953): Remove stackdriver specific config
          name: METRICS_DOMAIN
          value: knative.dev/serving
        securityContext:
          allowPrivilegeEscalation: false
        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
        - name: websocket
          containerPort: 8080
        - name: custom-metrics
          containerPort: 8443
        readinessProbe: &probe
          httpGet:
            port: 8080
            httpHeaders:
            - name: k-kubelet-probe
              value: "autoscaler"
        livenessProbe: *probe
        args:
        - "--secure-port=8443"
        - "--cert-dir=/tmp"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: autoscaler
    knative.dev/release: devel
  name: autoscaler
  namespace: mink-system
spec:
  ports:
  - # Define metrics and profiling for them to be accessible within service meshes.
    name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: http
    port: 8080
    targetPort: 8080
  - name: https-custom-metrics
    port: 443
    targetPort: 8443
  selector:
    app: autoscaler

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: batch/v1
kind: Job
metadata:
  name: default-domain
  namespace: mink-system
  labels:
    app: "default-domain"
    knative.dev/release: devel
spec:
  template:
    metadata:
      labels:
        app: "default-domain"
        knative.dev/release: devel
    spec:
      serviceAccountName: controller
      containers:
      - name: default-domain
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: docker.io/mattmoor/default-domain:v0.14.0@sha256:90478a796bb9e1981d4f59f524d2c3f8b5b1fa6b2118753463ae03ae3ed08bf7
        args: ["-magic-dns=xip.io"]
        ports:
        - name: http
          containerPort: 8080
        readinessProbe: &probe
          httpGet:
            port: 8080
        livenessProbe: *probe
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      restartPolicy: Never
  backoffLimit: 10
---
apiVersion: v1
kind: Service
metadata:
  name: default-domain-service
  namespace: mink-system
  labels:
    app: default-domain
    knative.dev/release: devel
spec:
  selector:
    app: default-domain
  ports:
  - name: http
    port: 80
    targetPort: 8080
  type: ClusterIP

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: config.webhook.mink.knative.dev
  labels:
    knative.dev/release: devel
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: mink-system
  failurePolicy: Fail
  sideEffects: None
  name: config.webhook.mink.knative.dev
  namespaceSelector:
    matchExpressions:
    - key: knative.dev/release
      operator: Exists

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: webhook.mink.knative.dev
  labels:
    knative.dev/release: devel
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: mink-system
  failurePolicy: Fail
  sideEffects: None
  name: webhook.mink.knative.dev

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: validation.webhook.mink.knative.dev
  labels:
    knative.dev/release: devel
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: mink-system
  failurePolicy: Fail
  sideEffects: None
  name: validation.webhook.mink.knative.dev

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Secret
metadata:
  name: webhook-certs
  namespace: mink-system
  labels:
    knative.dev/release: devel
# The data is populated at install time.

---
# Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clustertasks.tekton.dev
spec:
  group: tekton.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false
  names:
    kind: ClusterTask
    plural: clustertasks
    categories:
    - tekton
    - tekton-pipelines
  scope: Cluster
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1

---
# Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: conditions.tekton.dev
spec:
  group: tekton.dev
  names:
    kind: Condition
    plural: conditions
    categories:
    - tekton
    - tekton-pipelines
  scope: Namespaced
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1

---
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: images.caching.internal.knative.dev
  labels:
    knative.dev/crd-install: "true"
spec:
  group: caching.internal.knative.dev
  version: v1alpha1
  names:
    kind: Image
    plural: images
    singular: image
    categories:
    - knative-internal
    - caching
    shortNames:
    - img
  scope: Namespaced
  subresources:
    status: {}

---
# Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pipelines.tekton.dev
spec:
  group: tekton.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false
  names:
    kind: Pipeline
    plural: pipelines
    categories:
    - tekton
    - tekton-pipelines
  scope: Namespaced
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1

---
# Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pipelineruns.tekton.dev
spec:
  group: tekton.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false
  names:
    kind: PipelineRun
    plural: pipelineruns
    categories:
    - tekton
    - tekton-pipelines
    shortNames:
    - pr
    - prs
  scope: Namespaced
  additionalPrinterColumns:
  - name: Succeeded
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].reason"
  - name: StartTime
    type: date
    JSONPath: .status.startTime
  - name: CompletionTime
    type: date
    JSONPath: .status.completionTime
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1

---
# Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: pipelineresources.tekton.dev
spec:
  group: tekton.dev
  names:
    kind: PipelineResource
    plural: pipelineresources
    categories:
    - tekton
    - tekton-pipelines
  scope: Namespaced
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1

---
# Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: tasks.tekton.dev
spec:
  group: tekton.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false
  names:
    kind: Task
    plural: tasks
    categories:
    - tekton
    - tekton-pipelines
  scope: Namespaced
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1

---
# Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: taskruns.tekton.dev
spec:
  group: tekton.dev
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false
  names:
    kind: TaskRun
    plural: taskruns
    categories:
    - tekton
    - tekton-pipelines
    shortNames:
    - tr
    - trs
  scope: Namespaced
  additionalPrinterColumns:
  - name: Succeeded
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Succeeded\")].reason"
  - name: StartTime
    type: date
    JSONPath: .status.startTime
  - name: CompletionTime
    type: date
    JSONPath: .status.completionTime
  # Opt into the status subresource so metadata.generation
  # starts to increment
  subresources:
    status: {}
  version: v1alpha1

---
# Copyright 2020 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: vspherebindings.sources.tanzu.vmware.com
  labels:
    sources.tanzu.vmware.com/release: devel
    knative.dev/crd-install: "true"
spec:
  group: sources.tanzu.vmware.com
  version: v1alpha1
  names:
    kind: VSphereBinding
    plural: vspherebindings
    singular: vspherebinding
    categories:
    - all
    - knative
    - vsphere
    shortNames:
    - vsb
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2020 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0

apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: vspheresources.sources.tanzu.vmware.com
  labels:
    sources.tanzu.vmware.com/release: devel
    knative.dev/crd-install: "true"
spec:
  group: sources.tanzu.vmware.com
  version: v1alpha1
  names:
    kind: VSphereSource
    plural: vspheresources
    singular: vspheresource
    categories:
    - all
    - knative
    - vsphere
    shortNames:
    - vss
  scope: Namespaced
  subresources:
    status: {}
  additionalPrinterColumns:
  - name: Address
    type: string
    JSONPath: .status.address.url
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type=='Ready')].reason"

---
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: pingsource-jobrunner
  namespace: mink-system
  labels:
    knative.dev/release: devel
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pingsource-jobrunner
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: pingsource-jobrunner
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: mink-system-jobrunner
  apiGroup: rbac.authorization.k8s.io

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: controller
  namespace: mink-system
  labels:
    knative.dev/release: devel
---
####################################################################
#
#  Contour role bindings for reconciliation and leader election.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: contour
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: contour
subjects:
- kind: ServiceAccount
  name: controller
  namespace: mink-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: contour-leaderelection
  namespace: mink-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: contour-leaderelection
subjects:
- kind: ServiceAccount
  name: contour
  namespace: mink-system
---
####################################################################
#
#  Cluster role binding to pull in all of the capabilities needed
#  by knative controllers and webhooks.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-admin
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: controller
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: knative-role
  apiGroup: rbac.authorization.k8s.io
---
####################################################################
#
#  Aggregated cluster role and binding to pull in all capabilities
#  delegated to the knative serving controller.
#
####################################################################
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-serving-admin
  labels:
    knative.dev/release: devel
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      serving.knative.dev/controller: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: knative-serving-controller-admin
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: controller
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: knative-serving-admin
  apiGroup: rbac.authorization.k8s.io
---
####################################################################
#
#  Aggregated cluster role and binding to pull in all of the
#  capabilities for addressable resolution.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: addressable-resolver
  labels:
    knative.dev/release: devel
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      duck.knative.dev/addressable: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mink-addressable-resolver
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: controller
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: addressable-resolver
  apiGroup: rbac.authorization.k8s.io
---
####################################################################
#
#  Aggregated cluster role and binding to pull in all of the
#  capabilities for binding pod specables.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: podspecable-binding
  labels:
    knative.dev/release: devel
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      duck.knative.dev/podspecable: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mink-podspecable-binding
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: controller
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: podspecable-binding
  apiGroup: rbac.authorization.k8s.io
---
####################################################################
#
#  Cluster role binding to pull in all of the capabilities needed
#  by tekton controllers and webhooks.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-admin
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: controller
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: tekton-role
  apiGroup: rbac.authorization.k8s.io
---
####################################################################
#
#  Cluster role binding to pull in all of the capabilities needed
#  by the net-contour controller.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: net-contour-admin
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: controller
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: net-contour-role
  apiGroup: rbac.authorization.k8s.io
---
####################################################################
#
#  Cluster role binding to pull in all of the capabilities needed
#  by the VMware sources controller.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vmware-sources-admin
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: controller
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: vmware-sources-role
  apiGroup: rbac.authorization.k8s.io
---
####################################################################
#
#  Cluster role binding to pull in all of the capabilities needed
#  by the mattmoor/bindings controller.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mattmoor-bindings-admin
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: controller
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: mattmoor-bindings-role
  apiGroup: rbac.authorization.k8s.io
---
####################################################################
#
#  Cluster role binding to pull in all of the capabilities needed
#  by the vaikas/postgressource controller.
#
####################################################################
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vaikas-sources-admin
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: controller
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: vaikas-sources-role
  apiGroup: rbac.authorization.k8s.io

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-artifact-bucket
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Tekton components
    # consult their respective _example blocks:
    # - Tekton: https://github.com/tektoncd/pipeline/blob/master/config/config-artifact-bucket.yaml

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-artifact-pvc
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Tekton components
    # consult their respective _example blocks:
    # - Tekton: https://github.com/tektoncd/pipeline/blob/master/config/config-artifact-pvc.yaml

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-autoscaler
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Knative and Tekton components
    # consult their respective _example blocks:
    # - Serving: https://github.com/knative/serving/blob/master/config/core/configmaps/autoscaler.yaml

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contour-external
  namespace: mink-system
data:
  contour.yaml: |
    disablePermitInsecure: false
    leaderelection:
      configmap-name: leader-elect-external
      configmap-namespace: mink-system

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: contour-internal
  namespace: mink-system
data:
  contour.yaml: |
    disablePermitInsecure: false
    leaderelection:
      configmap-name: leader-elect-internal
      configmap-namespace: mink-system

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-contour
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  # visibility contains the configuration for how to expose services
  # of assorted visibilities.  Each entry is keyed by the visibility
  # and contains two keys:
  #  1. the "class" value to pass to the Contour class annotations,
  #  2. the namespace/name of the Contour Envoy service.
  visibility: |
    ExternalIP:
      class: contour-external
      service: mink-system/envoy-external
    ClusterLocal:
      class: contour-internal
      service: mink-system/envoy-internal

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-br-defaults
  namespace: mink-system
data:
  # Configuration for defaulting channels that do not specify CRD implementations.
  default-br-config: |
    clusterDefault:
      brokerClass: MTChannelBasedBroker
      apiVersion: v1
      kind: ConfigMap
      name: config-br-default-channel
      namespace: mink-system

---
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: default-ch-webhook
  namespace: mink-system
data:
  # Configuration for defaulting channels that do not specify CRD implementations.
  default-ch-config: |
    clusterDefault:
      apiVersion: messaging.knative.dev/v1alpha1
      kind: InMemoryChannel
    namespaceDefaults:
      some-namespace:
        apiVersion: messaging.knative.dev/v1alpha1
        kind: InMemoryChannel

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-br-default-channel
  namespace: mink-system
data:
  channelTemplateSpec: |
    apiVersion: messaging.knative.dev/v1alpha1
    kind: InMemoryChannel

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-defaults
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Tekton and Knative components
    # consult their respective _example blocks:
    # - Serving: https://github.com/knative/serving/blob/master/config/core/configmaps/defaults.yaml#L24
    # - Tekton: https://github.com/tektoncd/pipeline/blob/master/config/config-defaults.yaml#L21

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-deployment
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  # This is the Go import path for the binary that is containerized
  # and substituted here.
  queueSidecarImage: docker.io/mattmoor/queue:v0.14.0@sha256:90df47af12785c322f3b0d0f31049d57685a0416f926c18a326c2cf24d164a96
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Knative components
    # consult their respective _example blocks:
    # - Serving: https://github.com/knative/serving/blob/master/config/core/configmaps/deployment.yaml#L24

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-domain
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Knative and Tekton components
    # consult their respective _example blocks:
    # - Serving: https://github.com/knative/serving/blob/master/config/core/configmaps/domain.yaml

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-gc
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Knative and Tekton components
    # consult their respective _example blocks:
    # - Serving: https://github.com/knative/serving/blob/master/config/core/configmaps/gc.yaml

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-leader-election
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  # An inactive but valid configuration follows; see example.
  resourceLock: "leases"
  leaseDuration: "15s"
  renewDeadline: "10s"
  retryPeriod: "2s"
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Knative components
    # consult their respective _example blocks:
    # - Serving: https://github.com/knative/serving/blob/master/config/core/configmaps/leader-election.yaml#L24

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-logging
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Knative and Tekton components
    # consult their respective _example blocks:
    # - Eventing: https://github.com/knative/eventing/blob/master/config/core/configmaps/logging.yaml
    # - Serving: https://github.com/knative/serving/blob/master/config/core/configmaps/logging.yaml
    # - Tekton: https://github.com/tektoncd/pipeline/blob/master/config/config-logging.yaml

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-network
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  # The default networking integrations bundled with mink.
  ingress.class: "contour.ingress.networking.knative.dev"
  certificate.class: "net-http01.certificate.networking.knative.dev"
  # Enable TLS (via HTTP01) by default.
  autoTLS: "Enabled"
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Knative and Tekton components
    # consult their respective _example blocks:
    # - Serving: https://github.com/knative/serving/blob/master/config/core/configmaps/network.yaml

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-observability
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Knative and Tekton components
    # consult their respective _example blocks:
    # - Serving: https://github.com/knative/serving/blob/master/config/core/configmaps/observability.yaml

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-tracing
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # For examples of how to configure Knative and Tekton components
    # consult their respective _example blocks:
    # - Serving: https://github.com/knative/serving/blob/master/config/core/configmaps/tracing.yaml

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: controlplane
  namespace: mink-system
  labels:
    knative.dev/release: devel
spec:
  selector:
    matchLabels:
      app: controlplane
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: controlplane
        knative.dev/release: devel
    spec:
      serviceAccountName: controller
      containers:
      - name: controller
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: docker.io/mattmoor/webhook:v0.14.0@sha256:148116578d6b76f03ef9b40335072fb97e980fd3fc35d1cbea5436e3e3b86d2e
        # Mostly from Tekton
        args: ["-kubeconfig-writer-image", "docker.io/mattmoor/kubeconfigwriter:v0.14.0@sha256:2cac0622831ce90acadb9893da23c5646bdb3def50e2fd76a98805fb2de05690",
          "-creds-image", "docker.io/mattmoor/creds-init:v0.14.0@sha256:16f7b93e9c36d236d23e65e89bdf3802b5264888119b8a70f69d5a8314eee91d",
          "-git-image", "docker.io/mattmoor/git-init:v0.14.0@sha256:7bd2ed42f8783098326b8d8efb32afe0495e60ca18dbcb74fcf3baab25362a48",
          "-nop-image", "tianon/true", "-shell-image", "busybox", "-gsutil-image",
          "google/cloud-sdk", "-entrypoint-image", "docker.io/mattmoor/entrypoint:v0.14.0@sha256:c82fb3fd7405999bcdd3af4d41cb1d6f45bb4883f8b816546d653bec5679497a",
          "-imagedigest-exporter-image", "docker.io/mattmoor/imagedigestexporter:v0.14.0@sha256:2505dd123f8b0fd0d8febbf386da63121650149c3be86de723a4ced5f02e914e",
          "-pr-image", "docker.io/mattmoor/pullrequest-init:v0.14.0@sha256:9b1bff19ff5417fe8c024f2f471074bf2094266c4daf64d256fe4d965490b140",
          "-build-gcs-fetcher-image", "docker.io/mattmoor/gcs-fetcher:v0.14.0@sha256:64ef4bd79614c137bdac157a2fe845eddde8ad1acd9b6d80fd4a84576458b22a"]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 1000m
            memory: 1000Mi
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - # Enable Broker injection by default
          name: BROKER_INJECTION_DEFAULT
          value: "true"
        - # PingSource
          name: PING_IMAGE
          value: docker.io/mattmoor/adapter:v0.14.0@sha256:866dddc78b850a4eb2d74a9bd80bcdb999478e37dac04c976d4c04868f83fd9b
        - name: JOB_RUNNER_IMAGE
          value: docker.io/mattmoor/jobrunner:v0.14.0@sha256:9bb8d91db8b37343495ec1abd8dcbe4361546deb3c40578c745718360100ac7a
        - # APIServerSource
          name: APISERVER_RA_IMAGE
          value: docker.io/mattmoor/apiserver_receive_adapter:v0.14.0@sha256:c644e476b0c86b95a9d6f3715d85f1c892fd40d44c01606a1da98c217809043d
        - # GitHubSource
          name: GH_RA_IMAGE
          value: docker.io/mattmoor/receive_adapter:v0.14.0@sha256:e9fde555860937824cdee5bd8c5f6023f3e36b74a25e4995a73605c837966504
        - # KafkaSource
          name: KAFKA_RA_IMAGE
          value: docker.io/mattmoor/receive_adapter:v0.14.0@sha256:0c58ab15b7af2accb9329287270ad6c52aa35d173e039f1f4b0cb1304e31b386
        - # VSphereSource
          name: VSPHERE_ADAPTER
          value: docker.io/mattmoor/sources-for-knative-adapter:v0.14.0@sha256:ff65aac142d173f309999ee16e6108bd184788fa3168e3ebc6bfbf3e6a0e2a41
        - # PostgresSource
          name: POSTGRES_SOURCE_RA_IMAGE
          value: docker.io/mattmoor/receive_adapter:v0.14.0@sha256:e7f8a75a3ec65a0cabf04ca678b47db3bc68c7fcf6f4df94fad407687cd710de
        - # TODO(https://github.com/knative/pkg/pull/953): Remove stackdriver specific config
          name: METRICS_DOMAIN
          value: knative.dev/mink
        - # Mostly from Tekton
          name: CONFIG_ARTIFACT_BUCKET_NAME
          value: config-artifact-bucket
        - name: CONFIG_ARTIFACT_PVC_NAME
          value: config-artifact-pvc
        securityContext:
          allowPrivilegeEscalation: false
        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
        - name: http-challenge
          containerPort: 8080
      - name: contour-external
        image: docker.io/mattmoor/contour:v0.14.0@sha256:7c8abf0b744f698362fa792b85fca59c6601f5c8793d7bb9ea6a9e045de310b2
        args:
        - serve
        - --ingress-class-name=contour-external
        - --incluster
        - --xds-address=0.0.0.0
        - --http-port=8000
        - --xds-port=8001
        - --debug-http-port=6060
        - --envoy-service-http-port=8080
        - --envoy-service-https-port=8443
        - --contour-cafile=/ca/cacert.pem
        - --contour-cert-file=/certs/tls.crt
        - --contour-key-file=/certs/tls.key
        - --config-path=/config/contour.yaml
        ports:
        - containerPort: 8001
          name: xds
        - containerPort: 8000
          name: debug
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
        readinessProbe:
          tcpSocket:
            port: 8001
          initialDelaySeconds: 1
          periodSeconds: 1
        volumeMounts:
        - name: contourcert
          mountPath: /certs
          readOnly: true
        - name: cacert
          mountPath: /ca
          readOnly: true
        - name: contour-config-external
          mountPath: /config
          readOnly: true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      - name: contour-internal
        image: docker.io/mattmoor/contour:v0.14.0@sha256:7c8abf0b744f698362fa792b85fca59c6601f5c8793d7bb9ea6a9e045de310b2
        args:
        - serve
        - --ingress-class-name=contour-internal
        - --incluster
        - --xds-address=0.0.0.0
        - --http-port=8004
        - --xds-port=8003
        - --debug-http-port=6061
        - --envoy-service-http-port=8081
        - --envoy-service-https-port=8444
        - --contour-cafile=/ca/cacert.pem
        - --contour-cert-file=/certs/tls.crt
        - --contour-key-file=/certs/tls.key
        - --config-path=/config/contour.yaml
        ports:
        - containerPort: 8003
          name: xds
        - containerPort: 8004
          name: debug
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8004
        readinessProbe:
          tcpSocket:
            port: 8003
          initialDelaySeconds: 1
          periodSeconds: 1
        volumeMounts:
        - name: contourcert
          mountPath: /certs
          readOnly: true
        - name: cacert
          mountPath: /ca
          readOnly: true
        - name: contour-config-internal
          mountPath: /config
          readOnly: true
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
      dnsPolicy: ClusterFirst
      volumes:
      - name: contourcert
        secret:
          secretName: contourcert
      - name: cacert
        secret:
          secretName: cacert
      - name: contour-config-external
        configMap:
          name: contour-external
          defaultMode: 0644
          items:
          - key: contour.yaml
            path: contour.yaml
      - name: contour-config-internal
        configMap:
          name: contour-internal
          defaultMode: 0644
          items:
          - key: contour.yaml
            path: contour.yaml
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: controlplane
    knative.dev/release: devel
  name: webhook
  namespace: mink-system
spec:
  ports:
  - # Define metrics and profiling for them to be accessible within service meshes.
    name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: https-webhook
    port: 443
    targetPort: 8443
  selector:
    app: controlplane
---
apiVersion: v1
kind: Service
metadata:
  name: contour-external
  namespace: mink-system
spec:
  ports:
  - port: 8001
    name: xds
    targetPort: 8001
  selector:
    app: controlplane
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: contour-internal
  namespace: mink-system
spec:
  ports:
  - port: 8001
    name: xds
    targetPort: 8003
  selector:
    app: controlplane
  type: ClusterIP

---
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dataplane
  namespace: mink-system
  labels:
    knative.dev/release: devel
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 10%
  selector:
    matchLabels:
      app: envoy
      role: dataplane
  template:
    metadata:
      labels:
        app: envoy
        role: dataplane
        knative.dev/release: devel
    spec:
      initContainers:
      - name: envoy-internal-initconfig
        image: docker.io/mattmoor/contour:v0.14.0@sha256:7c8abf0b744f698362fa792b85fca59c6601f5c8793d7bb9ea6a9e045de310b2
        args:
        - bootstrap
        - /config/envoy.json
        - --xds-address=contour-internal
        - --xds-port=8001
        - --admin-port=9001
        - --envoy-cafile=/ca/cacert.pem
        - --envoy-cert-file=/certs/tls.crt
        - --envoy-key-file=/certs/tls.key
        volumeMounts:
        - name: envoy-internal-config
          mountPath: /config
        - name: envoycert
          mountPath: /certs
          readOnly: true
        - name: cacert
          mountPath: /ca
          readOnly: true
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      - name: envoy-external-initconfig
        image: docker.io/mattmoor/contour:v0.14.0@sha256:7c8abf0b744f698362fa792b85fca59c6601f5c8793d7bb9ea6a9e045de310b2
        args:
        - bootstrap
        - /config/envoy.json
        - --xds-address=contour-external
        - --xds-port=8001
        - --admin-port=9002
        - --envoy-cafile=/ca/cacert.pem
        - --envoy-cert-file=/certs/tls.crt
        - --envoy-key-file=/certs/tls.key
        volumeMounts:
        - name: envoy-external-config
          mountPath: /config
        - name: envoycert
          mountPath: /certs
          readOnly: true
        - name: cacert
          mountPath: /ca
          readOnly: true
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      serviceAccountName: controller
      containers:
      - name: activator
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: docker.io/mattmoor/activator:v0.14.0@sha256:0cfc11e95c74bf85e573c24a143cea9c9a10ef7e569d47e08cda4284cf8f0c51
        resources:
          requests:
            cpu: 100m
            memory: 60Mi
          limits:
            cpu: 1000m
            memory: 600Mi
        env:
        - # Run Activator with GC collection when newly generated memory is 500%.
          name: GOGC
          value: "500"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - # TODO(https://github.com/knative/pkg/pull/953): Remove stackdriver specific config
          name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        securityContext:
          allowPrivilegeEscalation: false
        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008
        - name: http1
          containerPort: 8012
        - name: h2c
          containerPort: 8013
        readinessProbe: &probe
          httpGet:
            port: 8012
            httpHeaders:
            - name: k-kubelet-probe
              value: "activator"
        livenessProbe: *probe
      - name: broker-filter
        terminationMessagePolicy: FallbackToLogsOnError
        image: docker.io/mattmoor/filter:v0.14.0@sha256:1144144d87ee32d00c3918a69149b6d4b05966cff0a40cca974c7cceeccd146e
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 9999
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 9999
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        env:
        - name: FILTER_PORT
          value: "9999"
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: CONTAINER_NAME
          value: broker-filter
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/internal/eventing
      - name: broker-ingress
        terminationMessagePolicy: FallbackToLogsOnError
        image: docker.io/mattmoor/ingress:v0.14.0@sha256:a8be2eb6cb1ba151f87f8df1a24f21b9e322d92eeff6842c730df2cd0a1a7a6d
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8888
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - containerPort: 8888
          name: http
          protocol: TCP
        - containerPort: 9090
          name: metrics
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        env:
        - name: INGRESS_PORT
          value: "8888"
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: CONTAINER_NAME
          value: broker-ingress
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/internal/eventing
      - name: envoy-internal
        image: docker.io/envoyproxy/envoy:v1.13.1
        imagePullPolicy: IfNotPresent
        command:
        - envoy
        args:
        - -c
        - /config/envoy.json
        - --base-id 1
        - --service-cluster $(CONTOUR_NAMESPACE)
        - --service-node $(ENVOY_POD_NAME)
        - --log-level info
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ENVOY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - name: http
          containerPort: 8081
        readinessProbe:
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
        - name: envoy-internal-config
          mountPath: /config
        - name: envoycert
          mountPath: /certs
        - name: cacert
          mountPath: /ca
        lifecycle:
          preStop:
            exec:
              command:
              - bash
              - -c
              - --
              - echo
              - -ne
              - "POST /healthcheck/fail HTTP/1.1\r\nHost: localhost\r\nConnection:
                close\r\n\r\n"
              - '>/dev/tcp/localhost/9001'
      - name: envoy-external
        image: docker.io/envoyproxy/envoy:v1.13.1
        imagePullPolicy: IfNotPresent
        command:
        - envoy
        args:
        - -c
        - /config/envoy.json
        - --base-id 2
        - --service-cluster $(CONTOUR_NAMESPACE)
        - --service-node $(ENVOY_POD_NAME)
        - --log-level info
        env:
        - name: CONTOUR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: ENVOY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        readinessProbe:
          httpGet:
            path: /ready
            port: 8002
          initialDelaySeconds: 3
          periodSeconds: 3
        volumeMounts:
        - name: envoy-external-config
          mountPath: /config
        - name: envoycert
          mountPath: /certs
        - name: cacert
          mountPath: /ca
        lifecycle:
          preStop:
            exec:
              command:
              - bash
              - -c
              - --
              - echo
              - -ne
              - "POST /healthcheck/fail HTTP/1.1\r\nHost: localhost\r\nConnection:
                close\r\n\r\n"
              - '>/dev/tcp/localhost/9002'
      volumes:
      - name: envoy-internal-config
        emptyDir: {}
      - name: envoy-external-config
        emptyDir: {}
      - name: envoycert
        secret:
          secretName: envoycert
      - name: cacert
        secret:
          secretName: cacert
      restartPolicy: Always
      # The activator (often) sits on the dataplane, and may proxy long (e.g.
      # streaming, websockets) requests.  We give a long grace period for the
      # activator to "lame duck" and drain outstanding requests before we
      # forcibly terminate the pod (and outstanding connections).  This value
      # should be at least as large as the upper bound on the Revision's
      # timeoutSeconds property to avoid servicing events disrupting
      # connections.
      terminationGracePeriodSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: activator-service
  namespace: mink-system
  labels:
    app: dataplane
    knative.dev/release: devel
spec:
  selector:
    role: dataplane
  ports:
  - # Define metrics and profiling for them to be accessible within service meshes.
    name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: http
    port: 80
    targetPort: 8012
  - name: http2
    port: 81
    targetPort: 8013
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: broker-ingress
  namespace: mink-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8888
  selector:
    role: dataplane
---
apiVersion: v1
kind: Service
metadata:
  name: broker-filter
  namespace: mink-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 9999
  selector:
    role: dataplane
---
apiVersion: v1
kind: Service
metadata:
  name: envoy-internal
  namespace: mink-system
  labels:
    app: dataplane
    knative.dev/release: devel
spec:
  selector:
    role: dataplane
  ports:
  - # Define metrics and profiling for them to be accessible within service meshes.
    name: http
    port: 80
    targetPort: 8081
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: envoy-external
  namespace: mink-system
  labels:
    app: dataplane
    knative.dev/release: devel
spec:
  selector:
    role: dataplane
  ports:
  - # Define metrics and profiling for them to be accessible within service meshes.
    name: http
    port: 80
    targetPort: 8080
  - name: https
    port: 443
    targetPort: 8443
  type: LoadBalancer

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-addressable-resolver
  labels:
    knative.dev/release: devel
    duck.knative.dev/addressable: "true"
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["serving.knative.dev"]
  resources: ["services", "services/status", "routes", "routes/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["messaging.knative.dev"]
  resources: ["channels", "channels/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["flows.knative.dev"]
  resources: ["sequences", "sequences/status", "parallels", "parallels/status"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["eventing.knative.dev"]
  resources: ["brokers", "brokers/status"]
  verbs: ["get", "list", "watch"]

---
# Snipped from Contour 1.1 manually
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: contour
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - nodes
  - pods
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "networking.k8s.io"
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups: ["contour.heptio.com"]
  resources: ["ingressroutes", "tlscertificatedelegations"]
  verbs:
  - get
  - list
  - watch
  - put
  - post
  - patch
- apiGroups: ["projectcontour.io"]
  resources: ["httpproxies", "tlscertificatedelegations"]
  verbs:
  - get
  - list
  - watch
  - put
  - post
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: contour-leaderelection
  namespace: mink-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - get
  - list
  - watch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - patch

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mink-system-jobrunner
  labels:
    knative.dev/release: devel
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["sources.knative.dev"]
  resources: ["pingsources", "pingsources/*"]
  verbs: ["get", "list", "watch", "patch"]

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-role
  labels:
    knative.dev/release: devel
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces", "secrets", "configmaps", "endpoints", "services",
    "events", "serviceaccounts"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: [""]
  resources: ["endpoints/restricted"] # Permission for RestrictedEndpointsAdmission
  verbs: ["create"]
- apiGroups: ["apps"]
  resources: ["deployments", "deployments/finalizers"] # finalizers are needed for the owner reference of the webhook
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- # The namespace annotation controller needs to manipulate RoleBindings.
  apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["rolebindings"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- # Authorization checker
  apiGroups: ["authorization.k8s.io"]
  resources: ["subjectaccessreviews"]
  verbs: ["create"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups:
  - "autoscaling.internal.knative.dev"
  - "caching.internal.knative.dev"
  - "eventing.knative.dev"
  - "flows.knative.dev"
  - "messaging.knative.dev"
  - "networking.internal.knative.dev"
  - "serving.knative.dev"
  - "sources.knative.dev"
  resources: ["*", "*/status", "*/finalizers"]
  verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch",
    "watch"]

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mattmoor-bindings-role
  labels:
    knative.dev/release: devel
rules:
- apiGroups: ["bindings.mattmoor.dev"]
  resources: ["*", "*/status", "*/finalizers"]
  verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch",
    "watch"]

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mink-namespaced-admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    knative.dev/release: devel
rules:
- apiGroups:
  - "autoscaling.internal.knative.dev"
  - "caching.internal.knative.dev"
  - "eventing.knative.dev"
  - "flows.knative.dev"
  - "messaging.knative.dev"
  - "networking.internal.knative.dev"
  - "serving.knative.dev"
  - "sources.knative.dev"
  - "tekton.dev"
  resources: ["*"]
  verbs: ["*"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mink-namespaced-edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    knative.dev/release: devel
rules:
- apiGroups:
  - "autoscaling.internal.knative.dev"
  - "caching.internal.knative.dev"
  - "eventing.knative.dev"
  - "flows.knative.dev"
  - "messaging.knative.dev"
  - "networking.internal.knative.dev"
  - "serving.knative.dev"
  - "sources.knative.dev"
  - "tekton.dev"
  resources: ["*"]
  verbs: ["create", "update", "patch", "delete"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mink-namespaced-view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    knative.dev/release: devel
rules:
- apiGroups:
  - "autoscaling.internal.knative.dev"
  - "caching.internal.knative.dev"
  - "eventing.knative.dev"
  - "flows.knative.dev"
  - "messaging.knative.dev"
  - "networking.internal.knative.dev"
  - "serving.knative.dev"
  - "sources.knative.dev"
  - "tekton.dev"
  resources: ["*"]
  verbs: ["get", "list", "watch"]

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: net-contour-role
  labels:
    knative.dev/release: devel
rules:
- apiGroups: ["projectcontour.io"]
  resources: ["httpproxies"]
  verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch",
    "watch"]

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: builtin-podspecable-binding
  labels:
    knative.dev/release: devel
    duck.knative.dev/podspecable: "true"
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "statefulsets", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["get", "list", "watch", "patch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-podspecable-binding
  labels:
    knative.dev/release: devel
    duck.knative.dev/podspecable: "true"
rules:
- apiGroups: ["serving.knative.dev"]
  resources: ["services", "configurations"]
  verbs: ["get", "list", "watch", "patch"]

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: receive-adapter-cm
rules:
- apiGroups: [""]
  # We need to create/update/get ConfigMaps so that the
  # receiveadapter can store state for checkpointing.
  resources: ["configmaps"]
  verbs: ["create", "update", "get"]

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tekton-role
  labels:
    knative.dev/release: devel
rules:
- apiGroups: [""]
  resources: ["pods", "pods/log", "persistentvolumeclaims", "limitranges"]
  verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
- apiGroups: ["tekton.dev"]
  resources: ["*", "*/status", "*/finalizers"]
  verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch",
    "watch"]

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vaikas-sources-role
  labels:
    knative.dev/release: devel
rules:
- apiGroups: ["sources.vaikas.dev"]
  resources: ["*", "*/status", "*/finalizers"]
  verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch",
    "watch"]

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: vmware-sources-role
  labels:
    knative.dev/release: devel
rules:
- apiGroups: ["sources.tanzu.vmware.com"]
  resources: ["*", "*/status", "*/finalizers"]
  verbs: ["get", "list", "create", "update", "delete", "deletecollection", "patch",
    "watch"]

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: githubbindings.webhook.mink.knative.dev
  labels:
    knative.dev.dev/release: devel
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: mink-system
  failurePolicy: Fail
  name: githubbindings.webhook.mink.knative.dev
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: slackbindings.webhook.mink.knative.dev
  labels:
    knative.dev.dev/release: devel
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: mink-system
  failurePolicy: Fail
  name: slackbindings.webhook.mink.knative.dev
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: twitterbindings.webhook.mink.knative.dev
  labels:
    knative.dev.dev/release: devel
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: mink-system
  failurePolicy: Fail
  name: twitterbindings.webhook.mink.knative.dev
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: googlecloudsqlbindings.webhook.mink.knative.dev
  labels:
    knative.dev.dev/release: devel
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: mink-system
  failurePolicy: Fail
  name: googlecloudsqlbindings.webhook.mink.knative.dev
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: sqlbindings.webhook.mink.knative.dev
  labels:
    knative.dev.dev/release: devel
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: mink-system
  failurePolicy: Fail
  name: sqlbindings.webhook.mink.knative.dev

---
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: sinkbindings.webhook.mink.knative.dev
  labels:
    knative.dev/release: devel
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: mink-system
  failurePolicy: Fail
  sideEffects: None
  name: sinkbindings.webhook.mink.knative.dev

---
# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: vspherebindings.webhook.mink.knative.dev
  labels:
    knative.dev/release: devel
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: webhook
      namespace: mink-system
  failurePolicy: Fail
  sideEffects: None
  name: vspherebindings.webhook.mink.knative.dev

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-imc-event-dispatcher
  namespace: mink-system
  labels:
    knative.dev/release: devel
data:
  MaxIdleConnections: "1000"
  MaxIdleConnectionsPerHost: "100"

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: imc-addressable-resolver
  labels:
    knative.dev/release: devel
    duck.knative.dev/addressable: "true"
# Do not use this role directly. These rules will be added to the "addressable-resolver" role.
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - inmemorychannels
  - inmemorychannels/status
  verbs:
  - get
  - list
  - watch

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: imc-channelable-manipulator
  labels:
    knative.dev/release: devel
    duck.knative.dev/channelable: "true"
# Do not use this role directly. These rules will be added to the "channelable-manipulator" role.
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - inmemorychannels
  - inmemorychannels/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: imc-controller
  labels:
    knative.dev/release: devel
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - inmemorychannels
  - inmemorychannels/status
  verbs:
  - get
  - list
  - watch
  - update
- apiGroups:
  - messaging.knative.dev
  resources:
  - inmemorychannels/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - services
  - serviceaccounts
  verbs: &everything
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "rbac.authorization.k8s.io"
  resources:
  - rolebindings
  verbs: *everything
- apiGroups:
  - apps
  resources:
  - deployments
  verbs: *everything
- apiGroups:
  - apps
  resources:
  - deployments/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs: *everything

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: imc-dispatcher
  labels:
    knative.dev/release: devel
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - inmemorychannels
  - inmemorychannels/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - "" # Core API group.
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
  # Updates the status to reflect subscribable status.
- apiGroups:
  - messaging.knative.dev
  resources:
  - inmemorychannels/status
  verbs:
  - update
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: Service
metadata:
  name: imc-dispatcher
  namespace: mink-system
  labels:
    knative.dev/release: devel
    messaging.knative.dev/channel: in-memory-channel
    messaging.knative.dev/role: dispatcher
spec:
  selector:
    messaging.knative.dev/channel: in-memory-channel
    messaging.knative.dev/role: dispatcher
  ports:
  - name: http-dispatcher
    port: 80
    protocol: TCP
    targetPort: 8080

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ServiceAccount
metadata:
  name: imc-dispatcher
  namespace: mink-system
  labels:
    knative.dev/release: devel

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: imc-controller
  namespace: mink-system
  labels:
    knative.dev/release: devel

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: imc-controller
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: imc-controller
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: imc-controller
  apiGroup: rbac.authorization.k8s.io

---
# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: imc-dispatcher
  labels:
    knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: imc-dispatcher
  namespace: mink-system
roleRef:
  kind: ClusterRole
  name: imc-dispatcher
  apiGroup: rbac.authorization.k8s.io

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: inmemorychannels.messaging.knative.dev
  labels:
    knative.dev/release: devel
    knative.dev/crd-install: "true"
    messaging.knative.dev/subscribable: "true"
    duck.knative.dev/addressable: "true"
spec:
  group: messaging.knative.dev
  preserveUnknownFields: false
  validation:
    openAPIV3Schema:
      type: object
      # this is a work around so we don't need to flush out the
      # schema for each version at this time
      #
      # see issue: https://github.com/knative/serving/issues/912
      x-kubernetes-preserve-unknown-fields: true
  names:
    kind: InMemoryChannel
    plural: inmemorychannels
    singular: inmemorychannel
    categories:
    - all
    - knative
    - messaging
    - channel
    shortNames:
    - imc
  scope: Namespaced
  subresources:
    status: {}
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: webhook
        namespace: mink-system
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  - name: URL
    type: string
    JSONPath: .status.address.url
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  versions:
  - name: v1alpha1
    served: true
    storage: true
  - name: v1beta1
    served: true
    storage: false

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: imc-controller
  namespace: mink-system
  labels:
    knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      messaging.knative.dev/channel: in-memory-channel
      messaging.knative.dev/role: controller
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: imc-controller
      containers:
      - name: controller
        image: docker.io/mattmoor/channel_controller:v0.14.0@sha256:dfad1191052929531b293b3347a2c39d6989924242a4cb4fac6e318653df066f
        env:
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/inmemorychannel-controller
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: DISPATCHER_IMAGE
          value: docker.io/mattmoor/channel_dispatcher:v0.14.0@sha256:a49b4e106641409914d906a4396f0d2c81223085d6dcdc9423c2717698178d98
        securityContext:
          allowPrivilegeEscalation: false
        ports:
        - name: metrics
          containerPort: 9090
        - name: profiling
          containerPort: 8008

---
# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: imc-dispatcher
  namespace: mink-system
  labels:
    knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels: &labels
      messaging.knative.dev/channel: in-memory-channel
      messaging.knative.dev/role: dispatcher
  template:
    metadata:
      labels: *labels
    spec:
      serviceAccountName: imc-dispatcher
      containers:
      - name: dispatcher
        image: docker.io/mattmoor/channel_dispatcher:v0.14.0@sha256:a49b4e106641409914d906a4396f0d2c81223085d6dcdc9423c2717698178d98
        env:
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: METRICS_DOMAIN
          value: knative.dev/inmemorychannel-dispatcher
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 9090
          name: metrics
        resources:
          # Set resource requests and limits based on the benchmarking results in
          # https://github.com/knative/eventing/issues/2311#issuecomment-565311345
          requests:
            cpu: 1000m
            memory: 256Mi
          limits:
            cpu: 2200m
            memory: 2048Mi

---
